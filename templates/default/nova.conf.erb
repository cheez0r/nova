# nova.conf generated by Chef
<%

  @flags = []

  def add_boolean_flag(flag)
    if node[:nova][flag]
      @flags << "--#{flag}"
    end
  end

  def add_flag(flag)
    if node[:nova][flag] and not node[:nova][flag].empty?
      @flags << "--#{flag}=#{node[:nova][flag]}"
    end
  end

add_boolean_flag(:verbose)
add_flag(:dhcpbridge_flagfile)
add_flag(:glance_api_servers)
add_flag(:dhcpbridge)
add_flag(:logdir)
add_flag(:state_path)
add_flag(:my_ip)
add_flag(:public_interface)
add_flag(:vlan_interface)
add_flag(:iscsi_ip_prefix)
add_flag(:libvirt_type)
add_flag(:network_manager)
add_flag(:default_project)
add_flag(:flat_network_bridge)
add_flag(:flat_interface)
add_boolean_flag(:flat_injected)
add_flag(:flat_network_dhcp_start)
add_flag(:fixed_range)
add_flag(:image_service)
add_flag(:lock_path)
add_boolean_flag(:use_ipv6)
add_flag(:ipv6_backend)
add_flag(:ca_path)
add_flag(:connection_type)
add_flag(:xenapi_connection_url)
add_flag(:xenapi_connection_username)
add_flag(:xenapi_connection_password)
add_flag(:xenapi_remap_vbd_dev)
add_flag(:rescue_timeout)
add_flag(:auth_strategy)
add_boolean_flag(:allow_admin_api)
add_boolean_flag(:allow_instance_snapshots)
add_flag(:block_device_creation_timeout)
add_flag(:osapi_max_limit)
add_flag(:quota_instances)
add_flag(:quota_cores)
add_flag(:quota_volumes)
add_flag(:quota_gigabytes)
add_flag(:quota_floating_ips)
add_flag(:quota_metadata_items)
add_flag(:quota_max_injected_files)
add_flag(:quota_max_injected_file_content_bytes)
add_flag(:quota_max_injected_file_path_bytes)
add_flag(:quota_ram)
add_flag(:service_down_time)
add_flag(:network_driver)
add_flag(:host)
add_flag(:keystone_ec2_url)
add_boolean_flag(:allow_resize_to_same_host)
add_boolean_flag(:noallow_resize_to_same_host)
add_flag(:password_length)
add_flag(:zone_name)
add_flag(:zone_capabilities)
add_flag(:root_helper)
add_flag(:notification_driver)
add_flag(:firewall_driver)
add_boolean_flag(:allow_same_net_traffic)
add_boolean_flag(:noallow_same_net_traffic)
add_boolean_flag(:use_cow_images)
add_boolean_flag(:nouse_cow_images)
add_flag(:scheduler_driver)
add_flag(:default_host_filters)
add_flag(:least_cost_functions)

%>
<% @flags.each do |flag| %>
<%= flag %>
<% end %>
<% if @sql_connection %>--sql_connection=<%= @sql_connection %><% end %>
--sql_idle_timeout=<%= node[:nova][:db][:sql_idle_timeout] %>
<% if @rabbit_settings %>
--rabbit_host=<%= @rabbit_settings[:address] %>
--rabbit_port=<%= @rabbit_settings[:port] %>
--rabbit_userid=<%= @rabbit_settings[:user] %>
--rabbit_password=<%= @rabbit_settings[:password] %>
--rabbit_virtual_host=<%= @rabbit_settings[:vhost] %>
<% end %>
<% if @extra_config then @extra_config.each do |key,value| %>
<% if value.nil? %>
--<%= key %>
<% else %>
--<%= key %>=<%= value %>
<% end end end %>
